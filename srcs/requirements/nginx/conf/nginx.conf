server {
	# define a porta na qual o servidor Nginx deve escutar as solicitações 
	listen 443 ssl;
	listen [::]:443 ssl;

	# efine o nome do servidor, que é usado para direcionar as
	# solicitações HTTPS para o servidor correto.
	server_name anolivei.42.fr;

	# define a localização do certificado e da chave SSL e os protocolos SSL
	ssl_certificate /etc/nginx/ssl/server.crt;
	ssl_certificate_key /etc/nginx/ssl/server.key;
	ssl_protocols TLSv1.2 TLSv1.3;

	# define o diretório raiz do servidor. Neste caso, o diretório raiz
	# é /var/www/wordpress, que é onde o WordPress foi instalado.
	root /var/www/wordpress;
	# define o arquivo padrão que o Nginx deve procurar ao atender uma
	# solicitação HTTP. Neste caso, o arquivo padrão é index.php.
	index index.php index.html index.htm;

	# localização para a rota raiz do servidor 
	location / {
		# try_files tentará primeiro encontrar o arquivo solicitado e, se ele
		# não existir, tentará encontrar um diretório correspondente com um
		# arquivo index. Se isso falhar, ele encaminhará a solicitação para o
		# arquivo index.php com os argumentos da string de consulta.
		try_files $uri $uri/ /index.php$is_args$args;
	}

	# localização para arquivos PHP, ~ \.php$ indica que esta localização deve
	# ser usada para todos os arquivos que terminam com a extensão .php
	location ~ \.php$ {
		# carrega o arquivo fastcgi_params, que contém configurações comuns
		# para o FastCGI
		include fastcgi_params;
		# define a variável SCRIPT_FILENAME, que é usada pelo PHP-FPM para
		# determinar qual arquivo PHP deve ser executado
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		# define o host (nome do container wordpress) e a porta do serviço
		# PHP-FPM (9000) para onde as solicitações PHP devem ser encaminhadas
		fastcgi_pass wordpress:9000;
		# define o arquivo padrão que o PHP-FPM deve procurar ao atender uma
		# solicitação PHP. Neste caso, o arquivo padrão é index.php.
		fastcgi_index index.php;
	}
}
